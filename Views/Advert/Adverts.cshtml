@model AdvertisingPortal.Core.ViewModels.AdvertsViewModel

@{
    ViewData["Title"] = "Ogłoszenia";
}

<h1>Moje ogłoszenia</h1>

<form id="filterForm">
    <div class="row gx-3 gy-2 align-items-center">
        <div class="col-sm-3">
            @Html.TextBoxFor(x => x.FilterAdverts.Title, new { @class = "form-control mb-2", placeholder = "Tytuł" })
        </div>
        <div class="col-sm-3">
            @Html.DropDownListFor(x => x.FilterAdverts.BuySellCategoryId,
            new SelectList(Model.BuySellCategories, "Id", "Name"),
            "-- wybierz kategorię --",
            new { @class = "form-control mb-2" })
        </div>
        <div class="col-sm-3">
            @Html.DropDownListFor(x => x.FilterAdverts.ItemServiceCategoryId,
            new SelectList(Model.ItemServiceCategories, "Id", "Name"),
            "-- wybierz kategorię --",
            new { @class = "form-control mb-2" })
        </div>
        <div class="col-sm-3">
            @Html.DropDownListFor(x => x.FilterAdverts.CategoryId,
            new SelectList(Model.Categories, "Id", "Name"),
            "-- wybierz kategorię --",
            new { @class = "form-control mb-2" })
        </div>
        <div class="col-sm-3">
            <div class="form-check mb-2">
                @Html.CheckBoxFor(x => x.FilterAdverts.IsFinished,
                new { @class = "form-check-label" })

                @Html.LabelFor(x => x.FilterAdverts.IsFinished)
            </div>
        </div>
        <div class="col-sm-3">
            <div class="form-check mb-2">
                @Html.CheckBoxFor(x => x.FilterAdverts.IsPromoted,
                new { @class = "form-check-label" })

                @Html.LabelFor(x => x.FilterAdverts.IsPromoted)
            </div>
        </div>
        <div class="col-auto">
            <button type="submit" class="btn btn-primary">Szukaj</button>
        </div>
    </div>
</form>

<div>
    @await Html.PartialAsync("_AdvertsTable.cshtml",Model.Adverts)
</div>

@section Scripts
{
    <script type="text/javascript">
        
        $(document).ready(function () {

            $('#filterForm').submit(function () {

                $.ajax({
                    type: 'POST',
                    url: "@Url.Action("Adverts","Advert")",
                    data: $(this).serialize(),
                    success: function (data) {
                        $('#advertsTable').html(data);
                    },
                    error: function (data) {
                        alert(data.message);
                    },
                    dataType: 'html'
                });

                return false;
            });
        });

        function deleteAdvert(id, btn) {
            if (!confirm("Czy na pewno chcesz usunąć ogłoszenie?"))
                return;

            $.ajax({
                type: 'POST',
                url: "@Url.Action("Delete","Advert")",
                data: {
                    id: id
                },
                success: function (data) {
                    if (data.success) {
                        var row = btn.parentNode.parentNode;
                        row.parentNode.removeChild(row);
                    }
                    else {
                        alert(data.message);
                    }

                },
                error: function (data) {
                    alert(data.message);
                },
                dataType: 'json'
            });
        }

    </script>
}