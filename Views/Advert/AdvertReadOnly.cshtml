@model AdvertisingPortal.Core.ViewModels.AdvertViewModel

<div class="row">

    @{
        ViewData["Title"] = Model.Heading;
        var Adverts = ViewBag.Adverts;
    }

    <i>@Model.Heading</i>

    <div class="col-6 mt-3">
        <b>Tytuł</b>
        <ul>

            @Model.Advert.Title
        </ul>
        <b>Opis</b>
        <ul>

            @Model.Advert.Description
        </ul>
        <b>Kategorie</b>
        <ul>

            @Model.Advert.BuySellCategory.Name /
            @Model.Advert.ItemServiceCategory.Name /
            @Model.Advert.Category.Name
        </ul>
        <b>Data publikacji</b>
        <ul>

            @Model.Advert.AdvertDate.ToString("dd-MM-yyyy")
        </ul>
        @if (Model.Advert.Location is not null)
        {
            <b>Lokalizacja</b>
            <ul>

                @Model.Advert.Location
            </ul>
        }

        <b>Kod pocztowy</b>
        <ul>

            @Model.Advert.ZipCode
        </ul>
        <b>Cena</b>
        <ul>

            @Model.Advert.Price
        </ul>
        <b>Status</b>
        @if (Model.Advert.IsFinished)
        {
            <ul class="text-danger">
                Nieaktywna
            </ul>
        }
        else
        {
            <ul class="text-success">
                Aktywna
            </ul>
        }

        <div class="mt-3">

            @await Html.PartialAsync("_AdvertsUser", Adverts as IEnumerable<AdvertisingPortal.Core.Models.Domains.Advert>)
        </div>
    </div>


    <div class="col-5 offset-lg-1">
        @await Html.PartialAsync("_AdvertImagesTable", Model.Advert.Images.Where(x => x.AdvertId == Model.Advert.Id))

        <div>
            <button class="btn btn-secondary mt-5 mb-5" onclick='window.location.href="@Url.Action("AdvertsReadOnly","Advert")"'>Wróć</button>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">


        $(".big").click(function () {
            var gallery = $('.gallery a').simpleLightbox({

                // default source attribute
                sourceAttr: 'href',
                // shows fullscreen overlay
                overlay: true,
                // shows loading spinner
                spinner: true,
                // shows navigation arrows
                nav: true,
                // text for navigation arrows
                navText: ['&larr;', '&rarr;'],
                // shows image captions
                captions: false,
                captionDelay: 0,
                captionSelector: 'img',
                captionType: 'attr',
                captionPosition: 'bottom',
                captionClass: '',
                captionHTML: false,
                // captions attribute (title or data-title)
                captionsData: 'title',
                // shows close button
                close: true,
                // text for close button
                closeText: 'X',
                // swipe up or down to close gallery
                swipeClose: true,
                // show counter
                showCounter: true,
                // file extensions
                fileExt: 'png|jpg|jpeg|gif',
                // weather to slide in new photos or not, disable to fade
                animationSlide: false,
                // animation speed in ms
                animationSpeed: 50,
                // image preloading
                preloading: true,
                // keyboard navigation
                enableKeyboard: true,
                // endless looping
                loop: true,
                // group images by rel attribute of link with same selector
                rel: false,
                // closes the lightbox when clicking outside
                docClose: true,
                // how much pixel you have to swipe
                swipeTolerance: 50,
                // lightbox wrapper Class
                className: 'simple-lightbox',
                // width / height ratios
                widthRatio: 0.8,
                heightRatio: 0.9,
                // scales the image up to the defined ratio size
                scaleImageToRatio: false,
                // disable right click
                disableRightClick: false,
                // show an alert if image was not found
                alertError: true,
                // alert message
                alertErrorMessage: 'Image not found, next image will be loaded',
                // additional HTML showing inside every image
                additionalHtml: false,
                // enable history back closes lightbox instead of reloading the page
                history: true,
                // time to wait between slides
                throttleInterval: 0,
                // Pinch to <a href="https://www.jqueryscript.net/zoom/">Zoom</a> feature for touch devices
                doubleTapZoom: 2,
                maxZoom: 10,
                // adds class to html element if lightbox is open
                htmlClass: 'has-lightbox',
                // RTL mode
                rtl: false,
                // elements with this class are fixed and get the right padding when lightbox opens
                fixedClass: 'sl-fixed',
                // fade speed in ms
                fadeSpeed: 300,
                // whether to uniqualize images
                uniqueImages: true,
                // focus the lightbox on open to enable tab control
                focus: true,

            });
            gallery.open();

            // alert("Anchor Tag Click Event.");
        });

    </script>
}
